name: 'Terraform Destroy and Summary'
description: 'Destroys Terraform-managed infrastructure and displays a summary in the GitHub Step Summary.'

inputs:
  s3-bucket:
    description: "S3 bucket for Terraform backend"
    required: true

  s3-region:
    description: "AWS region where the S3 bucket is located"
    required: true

  dynamodb-table:
    description: "DynamoDB table name for state locking"
    required: true

  terraform-dir:
    description: 'Directory where Terraform code is located'
    required: false
    default: 'tf'

  ci-pipeline:
    description: "Whether this is a CI pipeline"
    required: false
    default: "true"

runs:
  using: 'composite'
  steps:

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Compute Backend Key from Repository Name
      id: key
      shell: bash
      run: |
        if [[ "${{ inputs.ci-pipeline }}" == "true" ]]; then
          state_key="${{ github.repository }}/${{ github.sha }}/terraform.tfstate"
        else
          state_key="${{ github.repository }}/terraform.tfstate"
        fi
        echo "s3_key=$state_key" >> $GITHUB_OUTPUT

    - name: Terraform Init with S3 Backend
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}
      run: |
        terraform init -input=false \
          -backend-config="bucket=${{ inputs.s3-bucket }}" \
          -backend-config="key=${{ steps.key.outputs.s3_key }}" \
          -backend-config="region=${{ inputs.s3-region }}" \
          -backend-config="encrypt=true" \
          -backend-config="dynamodb_table=${{ inputs.dynamodb-table }}"

    - name: Terraform Destroy
      id: destroy
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}
      run: |
        TIMESTAMP=$(date -u "+%Y-%m-%d %H:%M:%S UTC")

        echo "## ☠️ Terraform Destroy Output" >> "$GITHUB_STEP_SUMMARY"
        echo "_**Started at: ${TIMESTAMP}**_" >> "$GITHUB_STEP_SUMMARY"
        echo "" >> "$GITHUB_STEP_SUMMARY"

        terraform destroy -auto-approve -input=false | tee destroy_output.txt || exit 1

        echo "" >> "$GITHUB_STEP_SUMMARY"
        echo "### Destroyed Resources" >> "$GITHUB_STEP_SUMMARY"
        echo "" >> "$GITHUB_STEP_SUMMARY"
        echo "| Resource Type | Resource Name     | Resource ID                        | Timestamp               |" >> "$GITHUB_STEP_SUMMARY"
        echo "|---------------|--------------------|-------------------------------------|--------------------------|" >> "$GITHUB_STEP_SUMMARY"

        awk -v timestamp="$TIMESTAMP" '
          BEGIN {
            print "| Resource Type | Resource Name     | Resource ID                        | Timestamp               |"
            print "|---------------|--------------------|-------------------------------------|--------------------------|"
          }
          /^[a-zA-Z0-9_]+\.[a-zA-Z0-9_\.]+: Destroying.*\[id=/ {
            match($0, /^([a-zA-Z0-9_]+\.[a-zA-Z0-9_\.]+): Destroying.*\[id=([^\]]+)\]/, arr)
            if (arr[1] && arr[2]) {
              key = arr[1]
              id = arr[2]
              type=substr(key, 1, index(key, ".")-1)
              name=substr(key, index(key, ".")+1)
              printf("| %-13s | %-18s | %-35s | %-24s |\n", type, name, id, timestamp)
            }
          }
        ' destroy_output.txt >> "$GITHUB_STEP_SUMMARY"


        echo "" >> "$GITHUB_STEP_SUMMARY"
        TIMESTAMP=$(date -u "+%Y-%m-%d %H:%M:%S UTC")
        echo "_**Completed at: ${TIMESTAMP}**_" >> "$GITHUB_STEP_SUMMARY"
        echo "" >> "$GITHUB_STEP_SUMMARY"
      shell: bash
